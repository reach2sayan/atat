const char *helpstring =
    ""
    "This code uses a Monte Carlo algorithm to find a Special Quasirandom "
    "Structure (SQS).\n"
    "In writing this code, Axel van de Walle benefited from the input of\n"
    "Alexey Dick, Dongwon Shin and Yi Wang.\n"
    "\n"
    "If you use this code in a publication, please cite:\n"
    "A. van de Walle, P. Tiwary, M. de Jong, D.L. Olmsted, M. Asta, A. Dick, "
    "D. Shin, Y. Wang, L.-Q. Chen, Z.-K. Liu,\n"
    "Efficient stochastic generation of special quasirandom structures, "
    "Calphad Journal 42, pp. 13-18 (2013)\n"
    "\n"
    "-> This code requires 2 input files:\n"
    "1) A file defining the random state (by default rndstr.in) in a format "
    "similar to the lat.in that\n"
    "   is needed for maps or corrdump but with partial occupation of the "
    "sites (see below).\n"
    "2) A cluster file (by default clusters.out), generated, for instance, "
    "with the command line:\n"
    "   mcsqs -2=... -3=... etc.\n"
    "   where -2=... -3=... indicate the range of pairs, triplets etc.\n"
    "   The code display the clusters found (format: nb of points, diameter, "
    "multiplicity).\n"
    "   \n"
    "   Internally, this actually calls the command\n"
    "   corrdump -l=rndstr.in -ro -noe -nop -clus -2=... -3=...  ; getclus\n"
    "      Note that the (new) -ro option allows corrdump to read the same "
    "input file as mcsqs (here rndstr.in)\n"
    "      The -noe and -nop skip the empty and point clusters that are not "
    "used by mcsqs\n"
    "      -clus indicates to generate clusters only\n"
    "      -2=... -3=... indicate the range of pairs, triplets etc.\n"
    "      getclus just indicates to write out the clusters (nb of points, "
    "length, multiplicity)\n"
    "      See corrdump -h for more info.\n"
    "\n"
    "When generating SQS, one typically needs to specify the -n=[number of "
    "atoms per cell] parameter on the command line.\n"
    "\n"
    "-> Output files:\n"
    "  bestsqs.out\n"
    "	The best SQS found so far (in stardard ATAT structure file format - "
    "see mmaps -h for a description)\n"
    "  bestcorr.out\n"
    "	For each of the clusters selected,\n"
    "	its number of pointd (1st column)\n"
    "	its diameter (2nd column)\n"
    "	the correlations of the best SQS found so far (3rd column)\n"
    "	along with the target disordered state correlation (4th column)\n"
    "	and the difference between the two (5th column).\n"
    "  rndstrgrp.out\n"
    "	A file containing the same info as the input file defining the random "
    "state (rndstr.in),\n"
    "	but with symmetrically equivalent sites grouped together and separated "
    "by blank lines.\n"
    "	(This helps determine which sites can have the same occupations.)\n"
    "  mcsqs.log\n"
    "	A log file.\n"
    "\n"
    "The code stops if a perfect match is found (all correlations requested "
    "match the disordered state),\n"
    "but this may never happen if there are too many clusters in clusters.out "
    "or -n (the number of atoms) is too small.\n"
    "In any case, the bestsqs.out and bestcorr.out always contain the best "
    "solution found so far.\n"
    "Stopping the code prematurely if the solution is satisfactory is fine.\n"
    "\n"
    "-> Optional files:\n"
    "  Creating a file called stopsqs stops the code cleanly.\n"
    "\n"
    "  Creating a file called sqsparam.in (or as specified by the -pf option)\n"
    "  with 4 numbers in it allows you to set the -wr, -wn, -wd and -T options "
    "during runtime.\n"
    "  (for backward compatibility, if 2 numbers are specified, they set the "
    "-wr and -T options\n"
    "   while the remaining options are set to their defaults.)\n"
    "\n"
    "  The -rc option lets you specify supercells to use (via a sqscell.out "
    "file).\n"
    "  Useful if brute force enumeration takes too long.\n"
    "  The  sqscell.out usually comes from a previous mcsqs run but you can "
    "create it yourself.\n"
    "  Note that the sqscell.out file must start with the number supercells "
    "you will provide\n"
    "  and that supercells must be expressed in multiple of the axes defined "
    "in the rndstr.in file\n"
    "  (in particular, all numbers entered would typically be integers).\n"
    "  [If your are using a version prior to  3.07, these should be entered in "
    "cartesian coordinates.]\n"
    "\n"
    "-> Format of the input file defining the lattice (specified by the -l "
    "option)\n"
    "\n"
    "First, the coordinate system a,b,c is specified, either as\n"
    "[a] [b] [c] [alpha] [beta] [gamma]\n"
    "or as:\n"
    "[ax] [ay] [az]\n"
    "[bx] [by] [bz]\n"
    "[cx] [cy] [cz]\n"
    "Then the lattice vectors u,v,w are listed, expressed in the coordinate "
    "system just defined:\n"
    "[ua] [ub] [uc]\n"
    "[va] [vb] [vc]\n"
    "[wa] [wb] [wc]\n"
    "Finally, atom positions and types are given, expressed in the same "
    "coordinate system\n"
    "as the lattice vectors:\n"
    "[atom1a] [atom1b] [atom1c] "
    "[atomtype11]=[occupation11],[atomtype12]=[occupation12],...\n"
    "[atom2a] [atom2b] [atom2c] "
    "[atomtype21]=[occupation21],[atomtype22]=[occupation22],...\n"
    "etc.\n"
    "\n"
    "Examples:\n"
    "\n"
    "The fcc lattice of the Cu-Au system; request for an SQS at composition "
    "0.5:\n"
    "3.8 3.8 3.8 90 90 90\n"
    "0   0.5 0.5\n"
    "0.5 0   0.5\n"
    "0.5 0.5 0\n"
    "0 0 0 Cu=0.5,Au=0.5\n"
    "\n"
    "A lattice for the Li_x Co_y Al_(1-y) O_2 system; request for an SQS\n"
    "with different composition on each sublattice:\n"
    " 0.707 0.707 6.928 90 90 120\n"
    " 0.3333  0.6667 0.3333\n"
    "-0.6667 -0.3333 0.3333\n"
    " 0.3333 -0.3333 0.3333\n"
    " 0       0      0       Li=0.75,Vac=0.25\n"
    " 0.3333  0.6667 0.0833  O\n"
    " 0.6667  0.3333 0.1667  Co=0.25,Ni=0.25,Al=0.5\n"
    " 0       0      0.25    O\n"
    "\n"
    "Please note that sites that are equivalent by symmetry must have the same "
    "occupation.\n"
    "The file rndstrgrp.out can help you figure out which sites are "
    "equivalent.\n"
    "If you want override this, you can simply use slightly different species "
    "labels (e.g. Fe_a,Fe_b) on the\n"
    "sites whose occupation must differ, even though these sites are a priori "
    "equivalent.\n"
    "Using different labels forces the code to consider the sites as "
    "inequivalent.\n"
    "\n"
    "-> The objective function used is:\n"
    "\n"
    "(sum (absolute difference from the disordered state "
    "correlations)*exp(-wd*(diameter of cluster))*(wn^(nb of points in "
    "cluster-2)))\n"
    "/\n"
    "(normalization for weights to sum up to 1 over clusters bigger than the "
    "smallest nonmatching cluster)\n"
    "\n"
    "-sum over p wr* wn^(p-2)*(diameter of smallest cluster of p points or "
    "less whose correlation does not match the disordered state)\n"
    "\n"
    "The wr, wn and wd are set through the -wr,-wn and -wd options "
    "respectively (or as the 3 first numbers of in the sqsparam.in file).\n"
    "The diameter of a cluster is the length of the longest pair contained in "
    "a cluster (normalized by nearest-neighbor distance).\n"
    "\n"
    "See routine calc_objective_func in mcsqs.c++ for a more precise "
    "description.\n"
    "\n"
    "This objective function reflect researchers' desire to perfectly match "
    "all correlation up to some range.\n"
    "Adding the absolute difference serves to guide the algorithm in the right "
    "direction to extend the range\n"
    "of perfect match.\n"
    "\n"
    "This objective function is a generalization of the one found in the "
    "Calphad paper cited above\n"
    "(reduces to it for wn=1 and wd=0, the defaults).\n"
    "\n"
    "-> Post-processing\n"
    "\n"
    "If you have obtained an SQS and would like to see how good/bad the "
    "correlations you have NOT included\n"
    "in the objective function are, you can use a command of the form:\n"
    "   corrdump -l=rndstr.in -ro -noe -2=... -3=... -s=bestsqs.out\n"
    "and compare to the output (for a perfectly random solid solution) of\n"
    "   corrdump -l=rndstr.in -ro -noe -2=... -3=... -s=bestsqs.out -rnd\n"
    "\n"
    "Beware that the above commands overwrite the clusters.out file.\n"
    "Make sure to NOT include the -nop option (which is incompatible with the "
    "-rnd option).\n"
    "\n"
    "The getclus command is useful to get a summary of what the clusters are "
    "(number of points, diameter, multiplicity).\n"
    "\n"
    "<\n";
